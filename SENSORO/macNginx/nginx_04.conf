#练习获取uri参数
worker_processes 8;
error_log logs/error.log;
events {
    worker_connections 512;
}

http {
    log_format myformat $remote_addr'$http_x_forwarded_for'$remote_user'$time_local'$request'$status'$body_bytes_sent'$http_referer'$http_user_agent'$host'$cookie_ssl_edition'$upstream_addr'$upstream_status'$request_time'$upstream_response_time;
    access_log logs/access.log myformat;

    server {
        listen 6710;
        server_name localhost;

        location /print_param { #curl "127.0.0.1:6710/print_param?a=10&b=20" -d "c=30&d=40"
            content_by_lua_block {
                local arg = ngx.req.get_uri_args();
                for k, v in pairs(arg) do
                    ngx.say("[GET ] key:", k, " v:", v);
                end

                ngx.req.read_body();    --解析body参数之前一定要先读取body
                local arg = ngx.req.get_post_args();
                for k, v in pairs(arg) do
                    ngx.say("[POST ] key:", k, " v:", v);
                end
            }
        }

        location /deliver_param {   #传递参数 curl "127.0.0.1:6710/deliver_param"
            content_by_lua_block {
                local res = ngx.location.capture(
                    "/print_param",
                    {
                        method = ngx.HTTP_POST,
                        args = ngx.encode_args({a = 1, b = "2b"}),
                        body = ngx.encode_args({c = 3, d = "4d"})
                    }
                );
                ngx.say(res.body);
            }
        }

        location /deliver_param1 {
            content_by_lua_block {
                local res = ngx.location.capture('/print_param',
                    {
                        method = ngx.HTTP_POST,
                        args = {a = 1, b = "2&"},   --参数可以是lua表也可以是字符串
                        body = "c=3&d=4%26"
                    }
                );
                ngx.say(res.body);
            }
        }
    }
}