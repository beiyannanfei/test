#练习负载均衡的使用
worker_processes 8;
error_log logs/error.log;
events {
    worker_connections 512;
}

http {
    log_format myformat $remote_addr'$http_x_forwarded_for'$remote_user'$time_local'$request'$status'$body_bytes_sent'$http_referer'$http_user_agent'$host'$cookie_ssl_edition'$upstream_addr'$upstream_status'$request_time'$upstream_response_time;
    access_log logs/access.log myformat;

    #轮询负载均衡
    upstream webservers {   #同时启动app0.js、app1.js两个文件, 会交替访问5001 5002两个端口
        server 127.0.0.1:5001 weight=1;
        server 127.0.0.1:5002 weight=1;
    }
    server {
        listen 6600;
        server_name localhost;
        location ^~ /jh/ {      #负载均衡反向代理
            proxy_pass http://webservers/;
            proxy_set_header X-Real-IP  $remote_addr;
        }
    }

    #配置 nginx 进行健康状态检查
    upstream webservers1 {  #只启动app0.js 5001端口服务器,则只会将请求转发到已经启动的服务
        server 127.0.0.1:5001 weight=1 max_fails=2 fail_timeout=2;
        server 127.0.0.1:5002 weight=1 max_fails=2 fail_timeout=2;
    }
    server {
        listen 6601;
        server_name localhost;
        location ^~ /jk/ {
            proxy_pass http://webservers1/;
            proxy_set_header X-Real-IP  $remote_addr;
        }
    }

    #配置 backup 服务器
    upstream webservers2 {  #先启动5002端口,如果启动5001,则请求只会转发到5001,否则全部转发到5002
        server 127.0.0.1:5001 weight=1 max_fails=2 fail_timeout=2;
        server 127.0.0.1:5002 backup;
    }
    server {
        listen 6602;
        server_name localhost;
        location ^~ /by/ {
            proxy_pass http://webservers2/;
            proxy_set_header X-Real-IP  $remote_addr;
        }
    }

    #配置 ip_hash 负载均衡
    upstream iphashwebserver {  #同时启动app0.js、app1.js两个文件,同一个ip会固定访问同一个后端
        ip_hash;
        server 127.0.0.1:5001 weight=1 max_fails=2 fail_timeout=2;
        server 127.0.0.1:5002 weight=1 max_fails=2 fail_timeout=2;
    }

    server {
        listen 6603;
        server_name localhost;
        location ^~ /ih/ {
            proxy_pass http://iphashwebserver/;
            proxy_set_header X-Real-IP  $remote_addr;
        }
    }
}


#需要启动当前目录的app0.js、app1.js两个文件
#nginx -p /Users/sensoro/bynf/ngx_work/ -c /Users/sensoro/bynf/test/SENSORO/macNginx/nginx_02.conf  启动
#curl 127.0.0.1:6600/jh/    <=>     127.0.0.1:5001/   or  127.0.0.1:5002/
#curl 127.0.0.1:6600/jh/a   <=>     127.0.0.1:5001/a  or  127.0.0.1:5002/a



