#redis接口的二次封装
worker_processes 1;
error_log /Users/sensoro/bynf/ngx_work/logs/error.log info;
pid /Users/sensoro/bynf/ngx_work/logs/nginx.pid;

events {
    worker_connections 256;
}

http {
    log_format  main  '$remote_addr - $request_time [$time_local] "$request" "$http_deviceinfo" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" "$http_host"';
    access_log off;    #/Users/sensoro/bynf/ngx_work/logs/access.log main;
    lua_package_path '/Users/sensoro/bynf/test/SENSORO/macNginx/?.lua;;';

    server {
        listen 6762;
        server_name localhost;

        location /test {    #curl "127.0.0.1:6762/test"
            content_by_lua_block {
                local redisPool = require "resty.redisPool";
                local redisClient = redisPool:new({timeout = 10000, db_address = "127.0.0.1:6379", db_index = 0});

                local ok, err = redisClient:set("dog", "an animal");
                if not ok then
                    return ngx.say("failed to set dog: ", err);
                end
                return ngx.say("set result: ", ok);
            }
        }
    }
}
