#禁止某些终端访问
worker_processes auto;
error_log /Users/sensoro/bynf/ngx_work/logs/error.log info;
pid /Users/sensoro/bynf/ngx_work/logs/nginx.pid;

events {
    worker_connections 256;
}

http {
    log_format  main  '$remote_addr - $request_time [$time_local] "$request" "$http_deviceinfo" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" "$http_host"';
    access_log /Users/sensoro/bynf/ngx_work/logs/access.log main;
    lua_package_path '/Users/sensoro/bynf/test/SENSORO/macNginx/?.lua;;';

    init_by_lua_block {
        local iputils = require "resty.iputils";
        iputils.enable_lrucache();
        local whitelist_ips = {
            "127.0.0.1",
            "10.10.10.0/24"
        }
        whitelist = iputils.parse_cidrs(whitelist_ips);
    }
    server {
        listen 6766;
        server_name localhost;

        location /test {    #curl "127.0.0.1:6766/test" => ok  curl "192.168.1.184:6766/test" => 403 (因为127.0.0.1在白名单,其它返回403)
            access_by_lua_block {
                local iputils = require "resty.iputils";
                if not iputils.ip_in_cidrs(ngx.var.remote_addr, whitelist) then
                    return ngx.exit(ngx.HTTP_FORBIDDEN);
                end
            }
            content_by_lua_block {
                ngx.say("ok");
            }
        }
    }
}
