#练习输出响应体
worker_processes 8;
error_log logs/error.log;

events {
    worker_connections 512;
}

http {
    log_format  main  '$remote_addr - $request_time [$time_local] "$request" "$http_deviceinfo" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"	"$http_host"';
    access_log logs/access.log main;

    server {
        listen 6730;
        server_name localhost;

        location /test {
            content_by_lua_block {  --curl "127.0.0.1:6730/test"  => 会等待3秒后输出全部内容
                ngx.say("hello");
                ngx.sleep(3);
                ngx.say(" the world");
            }
        }

        location /test1 {
            content_by_lua_block {  --curl "127.0.0.1:6730/test1" => 输出hello后等待3s后输出the world
                ngx.say("hello");
                ngx.flush();
                ngx.sleep(3);
                ngx.say("the world");
            }
        }

        location /test2 {
            content_by_lua_block {  -- curl "127.0.0.1:6730/test2" => 输出所以hello 然后等待3s后输出the world
                ngx.say(string.rep("hello ", 1000));
                ngx.sleep(3);
                ngx.say("the world");
            }
        }

        location /test3 {
            content_by_lua_block {  --curl "127.0.0.1:6730/test3"  循环读取大文件
                ngx.var.limit_rate = 256;   --控制读取速率
                local file, err = io.open(ngx.config.prefix() .. "logs/access.log", "r");
                if (not file) or err then
                    ngx.log(ngx.ERR, "open file error: ", err);
                    ngx.exit(ngx.HTTP_SERVICE_UNAVAILABLE);
                end

                local data;
                while true do
                    data = file:read(1024);
                    if (nil == data) then
                        break;
                    end
                    ngx.print(data);
                    ngx.flush();
                end
                file:close();
            }
        }

        location /test4 {
            content_by_lua_block {
                local table = {     --必须是数组格式的table才能被ngx打印出来
                    "a", "b", "c", "d"
                };
                ngx.say("------- table ------");
                ngx.say(table); -- abcd\n
                ngx.print(table);   -- abcd
            }
        }
    }
}