worker_processes auto;
error_log /Users/sensoro/bynf/ngx_work/logs/error.log;
pid /Users/sensoro/bynf/ngx_work/logs/nginx.pid;

events {
    worker_connections 256;
}

http {
    log_format  main  '$remote_addr - $request_time [$time_local] "$request" "$http_deviceinfo" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$http_host"';
    access_log /Users/sensoro/bynf/ngx_work/logs/access.log main;

    server {
        listen 8805;
        server_name localhost;

        location /print_param { #curl "127.0.0.1:8805/print_param?a=10&b=20" -d "c=30&d=40"
            content_by_lua_block {
                local json = require "cjson";
                local arg = ngx.req.get_uri_args();
                ngx.say(json.encode(arg));

                ngx.req.read_body();    --解析body参数之前一定要先读取body
                local arg = ngx.req.get_post_args();
                ngx.say(json.encode(arg));
            }
        }

        location /deliver_param {       # curl "127.0.0.1:8805/deliver_param"
            content_by_lua_block {
                local res = ngx.location.capture(
                    "/print_param",
                    {
                        method = ngx.HTTP_POST,
                        args = ngx.encode_args({a = 1, b = "2&"}),
                        body = ngx.encode_args({c = 3, d = "4&"})   -- body = "c=3&d=4%26"
                    }
                );
                ngx.say(res.body);
            }
        }
    }

    server {
        listen 8806;
        server_name localhost;

        lua_need_request_body on;   #默认读取body内容,全局生效

        location /test {    # curl "127.0.0.1:8806/test" -d "a=10&b=20"
            content_by_lua_block {
                local json = require "cjson";
                local data = ngx.req.get_body_data();
                local arg = ngx.req.get_post_args();
                ngx.say("hello ", data);
                ngx.say("HELLO ", json.encode(arg));
            }
        }
    }
}