worker_processes auto;
error_log /Users/sensoro/bynf/ngx_work/logs/error.log info;
pid /Users/sensoro/bynf/ngx_work/logs/nginx.pid;

events {
    worker_connections 256;
}

http {
    log_format  main  '$remote_addr - $request_time [$time_local] "$request" "$http_deviceinfo" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" "$http_host"';
    access_log /Users/sensoro/bynf/ngx_work/logs/access.log main;
    lua_package_path '/Users/sensoro/bynf/test/SENSORO/openresty/?.lua;;';

    server {
        listen 8816;
        server_name localhost;

        location ^~ /test/ {    # curl "127.0.0.1:8816/test"
            access_by_lua_block {
                local iputils = require "resty.iputils";
                local json = require "cjson";
                local redisPool = require "resty.redisPool";
                local redisClient = redisPool:new({timeout = 10000, db_address = "127.0.0.1:6379"});
                local list, err = redisClient:hvals("test");
                if err then
                    ngx.log(ngx.ERR, "get black user err: ", err);
                end
                list = list or {};
                ngx.log(ngx.INFO, json.encode(list));
                iputils.enable_lrucache();
                local whitelist = iputils.parse_cidrs(list);
                if not iputils.ip_in_cidrs(ngx.var.remote_addr, whitelist) then
                    return ngx.exit(ngx.HTTP_FORBIDDEN);
                end
            }

            proxy_pass http://127.0.0.1:5001/;
        }
    }
}