{
  "name": "connect-redis",
  "description": "Redis session store for Connect",
  "version": "1.4.7",
  "author": {
    "name": "TJ Holowaychuk",
    "email": "tj@vision-media.ca"
  },
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/visionmedia/connect-redis.git"
  },
  "dependencies": {
    "redis": "0.10.x",
    "debug": "*"
  },
  "devDependencies": {
    "connect": "*"
  },
  "engines": {
    "node": "*"
  },
  "bugs": {
    "url": "https://github.com/visionmedia/connect-redis/issues"
  },
  "scripts": {
    "test": "node test.js"
  },
  "homepage": "https://github.com/visionmedia/connect-redis",
  "_id": "connect-redis@1.4.7",
  "dist": {
    "shasum": "3445dc860cd802a9fd6156876e279c3212e7c82e",
    "tarball": "http://registry.npmjs.org/connect-redis/-/connect-redis-1.4.7.tgz"
  },
  "_from": "connect-redis@1.4.7",
  "_npmVersion": "1.3.14",
  "_npmUser": {
    "name": "chirag04",
    "email": "jain_chirag04@yahoo.com"
  },
  "maintainers": [
    {
      "name": "tjholowaychuk",
      "email": "tj@vision-media.ca"
    },
    {
      "name": "chirag04",
      "email": "jain_chirag04@yahoo.com"
    }
  ],
  "directories": {},
  "_shasum": "3445dc860cd802a9fd6156876e279c3212e7c82e",
  "_resolved": "https://registry.npmjs.org/connect-redis/-/connect-redis-1.4.7.tgz",
  "readme": "# Connect Redis\n\nconnect-redis is a Redis session store backed by [node_redis](http://github.com/mranney/node_redis), and is insanely fast :). Requires redis >= `2.0.0` for the _SETEX_ command.\n\n connect-redis `>= 1.0.0` support only connect `>= 1.0.0`.\n\n## Installation\n\n\t  $ npm install connect-redis\n\n## Options\n  \n  - `client` An existing redis client object you normally get from `redis.createClient()`\n  - `host` Redis server hostname\n  - `port` Redis server portno\n  - `ttl` Redis session TTL in seconds\n  - `db` Database index to use\n  - `pass` Password for Redis authentication\n  - `prefix` Key prefix defaulting to \"sess:\"\n  - `url` String that contains connection information in a single url (redis://user:pass@host:port/db)\n  - ...    Remaining options passed to the redis `createClient()` method.\n\n## Usage\n\n Due to npm 1.x changes, we now need to pass connect to the function `connect-redis` exports in order to extend `connect.session.Store`:\n\n    var connect = require('connect')\n\t \t  , RedisStore = require('connect-redis')(connect);\n\n    connect()\n      .use(connect.session({ store: new RedisStore(options), secret: 'keyboard cat' }))\n \n\n This means express users may do the following, since `express.session.Store` points to the `connect.session.Store` function:\n \n    var RedisStore = require('connect-redis')(express);\n\n# License\n\n  MIT\n",
  "readmeFilename": "Readme.md"
}
